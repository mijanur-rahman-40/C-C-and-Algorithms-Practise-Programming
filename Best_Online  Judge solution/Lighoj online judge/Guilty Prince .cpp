
#include<bits/stdc++.h>
using namespace std;
int row,col;
int vis[22][22];
int dx[] = {-1,0,0,1};
int dy[] = {0,1,-1,0};
int land_count(int a,int b,char arr[22][22])
{
    queue<pair<int,int> >Q;
    vis[a][b] = 1;
    int coun = 1;
    Q.push(make_pair(a,b));
    while(!Q.empty())
    {
        int u = Q.front().first;
        int v = Q.front().second;
        Q.pop();
        for(int i=0; i<4; i++){
            int x = u + dx[i];
            int y = v + dy[i];
        if((x>=0 && x<row ) && (y>=0 && y<col)){
            if( !vis[x][y] && arr[x][y] !='#'){
             coun++;
             vis[x][y] = 1;
             Q.push(make_pair(x,y));
           }
        }
    }
}
  return coun;
}
int main()
{
    int tst,j=1;
    scanf("%d",&tst);
    while(tst--){
        int a,b;
        char arr[22][22];
        scanf("%d%d",&col,&row);
        memset(vis,0,sizeof(vis));
        for(int i=0; i<row; i++){
            for(int j=0; j<col; j++){
                cin>>arr[i][j];
                if(arr[i][j] == '@'){
                    a = i;
                    b = j;
                }
            }
        }
       cout<<"Case "<<j++<<": "<<land_count(a,b,arr)<<endl;
    }
    return 0;
}


/*

6 9
....#.
.....#
......
......
......
......
......
#@...#
.#..#.

*/


































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































